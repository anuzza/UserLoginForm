{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anuja\\\\Downloads\\\\01-starting-project (5)\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/react.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["react","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","children"],"sources":["C:/Users/anuja/Downloads/01-starting-project (5)/01-starting-project/src/store/auth-context.js"],"sourcesContent":["import react, {useState} from \"react\";\r\n\r\n const AuthContext = react.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: ()=>{},\r\n    onLogin: (email, password)=>{}\r\n});\r\n\r\nconst AuthContextProvider = (props)=>{\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = ()=>{\r\n        setIsLoggedIn(false);\r\n            localStorage.removeItem('isLoggedIn');\r\n\r\n    };\r\n\r\n    const loginHandler=()=>{\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n\r\n    return <AuthContext.Provider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler}}>{props.children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACrCC,UAAU,EAAE,KADyB;EAErCC,QAAQ,EAAE,MAAI,CAAE,CAFqB;EAGrCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAmB,CAAE;AAHO,CAApB,CAApB;;AAMD,MAAMC,mBAAmB,GAAIC,KAAD,IAAS;EAAA;;EAEjC,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMW,aAAa,GAAG,MAAI;IACtBD,aAAa,CAAC,KAAD,CAAb;IACIE,YAAY,CAACC,UAAb,CAAwB,YAAxB;EAEP,CAJD;;EAMA,MAAMC,YAAY,GAAC,MAAI;IACnBJ,aAAa,CAAC,IAAD,CAAb;EACH,CAFD;;EAKA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACP,UAAU,EAAEA,UAAb;MAAyBC,QAAQ,EAAEO;IAAnC,CAA7B;IAAA,UAAiFF,KAAK,CAACM;EAAvF;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAhBD;;GAAMP,mB;;KAAAA,mB;AAkBN,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}